apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'


def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}


android {
    signingConfigs {
        release {
            keyAlias 'kmsCoreWise'
            keyPassword 'kmsCoreWise'
            storeFile file('../CWDemo/sign_jokey.jks')
            storePassword 'kmsCoreWise'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.cw.demo"

        minSdkVersion 15
        targetSdkVersion 22 //身份证功能必须降22,其他无所谓 *2.1版本以后兼容28以下,有问题与条码的system方法冲突

        //V1.2已发布,特别说明：需要修改工程根目录下的version.json文件
        //versionCode 1
        //versionName "DemoApp_V1.2"

        //versionCode 3
        //versionName "DemoApp_V1.3"

        //versionCode 4
        //versionName "DemoApp_V1.4"

        //versionCode 5
        //versionName "DemoApp_V1.5"

        //versionCode 7
        //versionName "DemoApp_V1.7"

        // versionCode 8
        // versionName "DemoApp_V1.8"//兼容u8 hxuhf

        // versionCode 9
        // versionName "DemoApp_V1.9"

        //versionCode 10
        //versionName "DemoApp_V1.10"//m550 u5

        //versionCode 11
        //versionName "DemoApp_V1.11"

        //versionCode 12
        //versionName "DemoApp_V2.0"//u5-b u5-c

        //versionCode 13
        //versionName "DemoApp_V2.1"//身份证功能兼容28,22为分界线

        //versionCode 14
        //versionName "DemoApp_V2.1.2"//m550

        //自动升级 修改工程根目录下的version.json文件
        versionCode 15
        versionName "DemoApp_V2.2"//m1卡cv523、u8 慧讯超高频

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //multiDexEnabled true
        ndk {
            // 设置支持的SO库架构
            abiFilters "armeabi-v7a"
            //"armeabi", "armeabi-v7a" , "arm64-v8a", "x86", "x86_64", "mips", "mips64"
        }
    }
    buildTypes {
        debug {
            setVersionNameSuffix("_debug")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    //配置自定义打包名称
    applicationVariants.all { variant ->
        variant.outputs.all {

            def fileName = "${defaultConfig.versionName + "_" + buildType.name}.apk"
            outputFileName = fileName
        }
    }
    lintOptions {
        checkReleaseBuilds false

        abortOnError false
    }
}

//2.必须2
repositories {
    flatDir {
        dirs 'libs'   // aar目录
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:26.1.0'
    compile 'com.qianwen:okhttp-utils:3.8.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.xuexiangjys:XUpdate:1.0.9'
    compile 'com.lovedise:permissiongen:0.0.6'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'q.rorbin:VerticalTabLayout:1.2.5'


    //扫码开发包
    //Barcode SDK
    compile(name: 'barcode_sdk_20200805', ext: 'aar')


    //串口开发包
    //SerialPort SDK
    compile(name: 'serialport_sdk_20200904', ext: 'aar')


    //身份证开发包,需要依赖串口开发包
    //IDcard SDK,need SerialPort SDK
    compile(name: 'idcard_sdk_20200818', ext: 'aar')


    //GAA大指纹开发包(新固件开发包),,需要依赖串口开发包
    //GAA FingerPrint SDK,need SerialPort SDK
//    compile(name: 'fp_gaa_sdk_20190722', ext: 'aar')


    //GAB大指纹开发包(新固件开发包),需要依赖串口开发包
    // GAB FingerPrint SDK
    compile(name: 'fp_gab_sdk_20190701', ext: 'aar')

    //JRA小指纹开发包,需要依赖串口开发包
    //JRA FingerPrint SDK,need SerialPort SDK
    compile(name: 'fp_jra_sdk_20200610', ext: 'aar')

    //PY超高频开发包,需要依赖串口开发包
    //HX UHF SDK,need SerialPort SDK
    compile(name: 'phychips_uhf_sdk_20200904', ext: 'aar')

    //PY超高频开发包,需要依赖串口开发包
    //RB M550 UHF SDK,need SerialPort SDK
    compile(name: 'rbm550uhf_sdk_20200901', ext: 'aar')

    //北斗开发包,需要依赖串口开发包
    //BeiDou SDK,need SerialPort SDK
    compile(name: 'beidou_sdk_20190614', ext: 'aar')


    //R2000超高频开发包,需要依赖串口开发包
    //R2000 UHF SDK
    compile(name: 'r2000uhf_sdk_20200703', ext: 'aar')


    //M1 RFID开发包,需要依赖串口开发包
    //M1 RFID SDK
    compile(name: 'm1rfid_sdk_20200904', ext: 'aar')
}
