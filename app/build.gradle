apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'


def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}


android {
    signingConfigs {
        release {
            keyAlias 'kmsCoreWise'
            keyPassword 'kmsCoreWise'
            storeFile file('../CWDemo/sign_jokey.jks')
            storePassword 'kmsCoreWise'
        }
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.cw.demo"
        minSdkVersion 15
        targetSdkVersion 22 //身份证功能必须降22，其他无所谓

        //V1.2已发布,特别说明：需要修改工程根目录下的version.json文件
        //versionCode 1
        //versionName "DemoApp_V1.2"

        //V1.3已发布,特别说明：需要修改工程根目录下的version.json文件
        //versionCode 3
        //versionName "DemoApp_V1.3"

        versionCode 4
        versionName "DemoApp_V1.4_debug"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //multiDexEnabled true

    }
    buildTypes {
        debug {
            setVersionNameSuffix("_debug")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    //配置自定义打包名称
    applicationVariants.all { variant ->
        variant.outputs.all {

            def fileName = "${defaultConfig.versionName + "_" + buildType.name}.apk"
            outputFileName = fileName
        }
    }
    lintOptions {
        checkReleaseBuilds false

        abortOnError false
    }
}

//2.必须2
repositories {
    flatDir {
        dirs 'libs'   // aar目录
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:26.1.0'
    compile 'com.qianwen:okhttp-utils:3.8.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.xuexiangjys:XUpdate:1.0.9'
    compile 'com.lovedise:permissiongen:0.0.6'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'q.rorbin:VerticalTabLayout:1.2.5'
    //扫码开发包
    //Barcode SDK
    compile(name: 'barcode_sdk_20190429', ext: 'aar')
    //串口开发包
    //SerialPort SDK
    compile(name: 'serialport_sdk_20190528', ext: 'aar')
    //身份证开发包,需要依赖串口开发包
    //IDcard SDK,need SerialPort SDK
    compile(name: 'idcard_sdk_20190528', ext: 'aar')
    //GAA大指纹开发包(新固件开发包)
    //GAA FingerPrint SDK
    compile(name: 'fp_gaa_sdk_20190603', ext: 'aar')
    //JRA小指纹开发包
    //JRA FingerPrint SDK
    compile(name: 'fp_jra_sdk_20190529', ext: 'aar')
    //PY超高频开发包,需要依赖串口开发包
    //HX UHF SDK,need SerialPort SDK
    compile(name: 'phychips_uhf_sdk_20190520', ext: 'aar')
    //北斗开发包,需要依赖串口开发包
    //BeiDou SDK,need SerialPort SDK
    compile(name: 'beidou_sdk_20190524', ext: 'aar')
    //R2000超高频开发包,需要依赖串口开发包
    //R2000 UHF SDK
    compile(name: 'r2000uhf_sdk_20190429', ext: 'aar')
    //M1 RFID开发包,需要依赖串口开发包
    //M1 RFID SDK
    compile(name: 'm1rfid_sdk_20190531', ext: 'aar')
}
